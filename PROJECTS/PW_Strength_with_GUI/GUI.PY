import customtkinter as ctk
import pw_gen

# Your existing password_checker function
def password_checker(password):
    issues = []
    if len(password) < 10:
        issues.append("Password length below 10 characters")
    if not any(char.isdigit() for char in password):
        issues.append("Add numbers to your password")
    if not any(char.isupper() for char in password):
        issues.append("Add at-least one upper case character")
    if not any(char.islower() for char in password):
        issues.append("Include lower case characters too")
    if not any(char in "!@#$%^&*()-_=+" for char in password):
        issues.append("Include a special character such as !@#$%^&*()-_=+")
    if len(issues) == 0:
        return "Your Password is: Strong"
    else:
        return "\n".join(issues)

# ---------- GUI ----------
ctk.set_appearance_mode("dark")
ctk.set_default_color_theme("blue")

app = ctk.CTk()
app.geometry("600x450")
app.title("Password Generator / Strength Checker")

main_frame = ctk.CTkFrame(app)
main_frame.pack(pady=20, padx=20, fill="both", expand=True)

# Question label
question_label = ctk.CTkLabel(main_frame, text="Do you want the computer to generate a password?", font=ctk.CTkFont(size=16))
question_label.pack(pady=(10,5))

# Buttons Yes / No
button_frame = ctk.CTkFrame(main_frame)
button_frame.pack(pady=(0,10))

entry_box = ctk.CTkEntry(main_frame, width=400, show="*")
result_box = ctk.CTkTextbox(main_frame, width=500, height=120)

def user_says_yes():
    gen_pw = pw_gen.local_password(length=10, num=1)[0]
    entry_box.delete(0, ctk.END)
    entry_box.insert(0, gen_pw)
    entry_box.pack(pady=(10,5))
    result_box.delete("1.0", "end")
    result_box.insert("end", f"Here is your password generated by the computer:\n{gen_pw}")
    result_box.pack(pady=(10,5))
    # remove question/buttons
    question_label.pack_forget()
    button_frame.pack_forget()

def user_says_no():
    entry_box.delete(0, ctk.END)
    entry_box.pack(pady=(10,5))
    result_box.delete("1.0", "end")
    result_box.pack(pady=(10,5))
    # remove question/buttons
    question_label.pack_forget()
    button_frame.pack_forget()

ctk.CTkButton(button_frame, text="Yes", width=120, command=user_says_yes).pack(side="left", padx=20)
ctk.CTkButton(button_frame, text="No", width=120, command=user_says_no).pack(side="right", padx=20)

# Check strength button
def check_strength():
    pw = entry_box.get()
    if not pw:
        result_box.delete("1.0", "end")
        result_box.insert("end", "Please enter or generate a password first.")
        return
    result_box.delete("1.0", "end")
    strength_msg = password_checker(pw)
    result_box.insert("end", strength_msg)

ctk.CTkButton(main_frame, text="Check Password Strength", command=check_strength).pack(pady=(10,5))

# Copy password button
def copy_pw():
    pw = entry_box.get()
    if pw:
        app.clipboard_clear()
        app.clipboard_append(pw)

ctk.CTkButton(main_frame, text="Copy Password", command=copy_pw).pack(pady=(5,10))

app.mainloop()

